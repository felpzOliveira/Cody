#include <languages.h>
TokenizerSupport cppSupport = {
    .comments = true,
    .strings = true,
    .numbers = true,
    .lookups = true,
    .multilineComment = true,
    .lineCommentChar = 0,
    .procs = {},
};

TARGET src/languages/cpp.cpp
BEGIN cppReservedPreprocessor
# PREPROCESSOR
+ MATH
- MATH
> MORE
< LESS
/ MATH
% MATH
! MATH
= MATH
* ASTERISK
& MATH
| MATH
^ MATH
~ MATH
, COMMA
; SEMICOLON
. MATH
( PARENTHESE_OPEN
) PARENTHESE_CLOSE
{ BRACE_OPEN
} BRACE_CLOSE
[ BRACKET_OPEN
] BRACKET_CLOSE
: MATH
do OPERATOR
if PREPROCESSOR_IF
asm OPERATOR
for OPERATOR
try OPERATOR
int DATATYPE
GLenum DATATYPE
GLboolean DATATYPE
GLbitfield DATATYPE
GLvoid DATATYPE
GLbyte DATATYPE
GLshort DATATYPE
GLint DATATYPE
GLfloat DATATYPE
GLubyte DATATYPE
GLushort DATATYPE
GLuint DATATYPE
GLsizei DATATYPE
GLclampf DATATYPE
GLdouble DATATYPE
GLclampd DATATYPE
new OPERATOR
and OPERATOR
elif PREPROCESSOR_IF
FILE DATATYPE
dim3 DATATYPE
this OPERATOR
char DATATYPE
long DATATYPE
NULL OPERATOR
case OPERATOR
true OPERATOR
else PREPROCESSOR_IF
line PREPROCESSOR
goto OPERATOR
bool DATATYPE
void DATATYPE
enum DATATYPE_ENUM_DEF
auto DATATYPE
short DATATYPE
const DATATYPE
undef PREPROCESSOR
ifdef PREPROCESSOR
error PREPROCESSOR
endif PREPROCESSOR
union OPERATOR
using OPERATOR
class DATATYPE_CLASS_DEF
final OPERATOR
false OPERATOR
float DATATYPE
catch OPERATOR
throw OPERATOR
while OPERATOR
break OPERATOR
define PREPROCESSOR_DEFINE
ifndef PREPROCESSOR
pragma PREPROCESSOR
friend OPERATOR
int8_t DATATYPE
size_t DATATYPE
inline OPERATOR
static OPERATOR
sizeof OPERATOR
and_eq OPERATOR
signed DATATYPE
delete OPERATOR
switch OPERATOR
typeid OPERATOR
export OPERATOR
return OPERATOR
extern OPERATOR
public OPERATOR
double DATATYPE
struct DATATYPE_STRUCT_DEF
va_list DATATYPE
ssize_t DATATYPE
clock_t DATATYPE
include INCLUDE_SEL
defined OPERATOR
warning PREPROCESSOR
mutable OPERATOR
uint8_t DATATYPE
uint16_t DATATYPE
int16_t DATATYPE
int32_t DATATYPE
int64_t DATATYPE
nullptr OPERATOR
alignas OPERATOR
wchar_t DATATYPE
virtual OPERATOR
default OPERATOR
alignof OPERATOR
private OPERATOR
gridDim RESERVED
typedef DATATYPE_TYPEDEF_DEF
intptr_t DATATYPE
CUstream DATATYPE
CUtexref DATATYPE
CUmodule DATATYPE
CUdevice DATATYPE
CUresult DATATYPE
decltype OPERATOR
uint32_t DATATYPE
uint64_t DATATYPE
operator OPERATOR
template OPERATOR
__func__ RESERVED
__FILE__ RESERVED
__LINE__ RESERVED
__DATE__ RESERVED
__TIME__ RESERVED
__host__ RESERVED
explicit OPERATOR
register OPERATOR
requires OPERATOR
override OPERATOR
typename OPERATOR
volatile OPERATOR
unsigned DATATYPE
blockDim RESERVED
blockIdx RESERVED
warpSize RESERVED
continue OPERATOR
CUcontext DATATYPE
uintptr_t DATATYPE
threadIdx RESERVED
constexpr OPERATOR
protected OPERATOR
namespace DATATYPE_NAMESPACE_DEF
CUfunction DATATYPE
const_cast OPERATOR
__device__ RESERVED
__global__ RESERVED
__inline__ RESERVED
__shared__ RESERVED
OptixResult DATATYPE
CUdeviceptr DATATYPE
CUlinkState DATATYPE
cudaSuccess RESERVED
cudaEvent_t DATATYPE
cudaError_t DATATYPE
static_cast OPERATOR
__FUNCTION__ RESERVED
__constant__ RESERVED
__restrict__ RESERVED
dynamic_cast OPERATOR
thread_local OPERATOR
OPTIX_SUCCESS RESERVED
OptixDenoiser DATATYPE
__CUDA_ARCH__ RESERVED
static_assert OPERATOR
__TIMESTAMP__ RESERVED
__forceinline__ RESERVED
reinterpret_cast OPERATOR
OptixDenoiserSizes DATATYPE
OptixDeviceContext DATATYPE
OptixDenoiserParams DATATYPE
OptixDenoiserOptions DATATYPE
cudaMemcpyHostToDevice RESERVED
cudaMemcpyDeviceToHost RESERVED
END
BEGIN cppReservedTable
+ MATH
- MATH
> MORE
< LESS
/ MATH
% MATH
! MATH
= MATH
* ASTERISK
& MATH
| MATH
^ MATH
~ MATH
, COMMA
; SEMICOLON
. MATH
( PARENTHESE_OPEN
) PARENTHESE_CLOSE
{ BRACE_OPEN
} BRACE_CLOSE
[ BRACKET_OPEN
] BRACKET_CLOSE
: MATH
do OPERATOR
if OPERATOR
asm OPERATOR
for OPERATOR
try OPERATOR
int DATATYPE
GLenum DATATYPE
GLboolean DATATYPE
GLbitfield DATATYPE
GLvoid DATATYPE
GLbyte DATATYPE
GLshort DATATYPE
GLint DATATYPE
GLfloat DATATYPE
GLubyte DATATYPE
GLushort DATATYPE
GLuint DATATYPE
GLsizei DATATYPE
GLclampf DATATYPE
GLdouble DATATYPE
GLclampd DATATYPE
new OPERATOR
and OPERATOR
FILE DATATYPE
dim3 DATATYPE
this OPERATOR
char DATATYPE
long DATATYPE
NULL OPERATOR
case OPERATOR
true OPERATOR
else OPERATOR
goto OPERATOR
bool DATATYPE
void DATATYPE
enum DATATYPE_ENUM_DEF
auto DATATYPE
short DATATYPE
const DATATYPE
union OPERATOR
using OPERATOR
class DATATYPE_CLASS_DEF
final OPERATOR
false OPERATOR
float DATATYPE
catch OPERATOR
throw OPERATOR
while OPERATOR
break OPERATOR
friend OPERATOR
int8_t DATATYPE
size_t DATATYPE
inline OPERATOR
static OPERATOR
sizeof OPERATOR
and_eq OPERATOR
signed DATATYPE
delete OPERATOR
switch OPERATOR
typeid OPERATOR
export OPERATOR
return OPERATOR
extern OPERATOR
public OPERATOR
double DATATYPE
struct DATATYPE_STRUCT_DEF
va_list DATATYPE
ssize_t DATATYPE
clock_t DATATYPE
mutable OPERATOR
nullptr OPERATOR
alignas OPERATOR
wchar_t DATATYPE
uint8_t DATATYPE
uint16_t DATATYPE
int16_t DATATYPE
int32_t DATATYPE
int64_t DATATYPE
virtual OPERATOR
default OPERATOR
alignof OPERATOR
private OPERATOR
gridDim RESERVED
typedef DATATYPE_TYPEDEF_DEF
intptr_t DATATYPE
CUstream DATATYPE
CUtexref DATATYPE
CUmodule DATATYPE
CUdevice DATATYPE
CUresult DATATYPE
decltype OPERATOR
uint32_t DATATYPE
uint64_t DATATYPE
operator OPERATOR
template OPERATOR
__func__ RESERVED
__FILE__ RESERVED
__LINE__ RESERVED
__DATE__ RESERVED
__TIME__ RESERVED
__host__ RESERVED
explicit OPERATOR
register OPERATOR
requires OPERATOR
override OPERATOR
typename OPERATOR
volatile OPERATOR
unsigned DATATYPE
blockDim RESERVED
blockIdx RESERVED
warpSize RESERVED
continue OPERATOR
CUcontext DATATYPE
uintptr_t DATATYPE
threadIdx RESERVED
constexpr OPERATOR
protected OPERATOR
namespace DATATYPE_NAMESPACE_DEF
CUfunction DATATYPE
const_cast OPERATOR
__device__ RESERVED
__global__ RESERVED
__inline__ RESERVED
__shared__ RESERVED
OptixResult DATATYPE
CUdeviceptr DATATYPE
CUlinkState DATATYPE
cudaSuccess RESERVED
cudaEvent_t DATATYPE
cudaError_t DATATYPE
static_cast OPERATOR
CUDA_SUCCESS RESERVED
OptixImage2D DATATYPE
__FUNCTION__ RESERVED
__constant__ RESERVED
__restrict__ RESERVED
dynamic_cast OPERATOR
thread_local OPERATOR
OPTIX_SUCCESS RESERVED
OptixDenoiser DATATYPE
__CUDA_ARCH__ RESERVED
static_assert OPERATOR
__TIMESTAMP__ RESERVED
__forceinline__ RESERVED
reinterpret_cast OPERATOR
OptixDenoiserSizes DATATYPE
OptixDeviceContext DATATYPE
OptixDenoiserParams DATATYPE
OptixDenoiserOptions DATATYPE
cudaMemcpyHostToDevice RESERVED
cudaMemcpyDeviceToHost RESERVED
END
