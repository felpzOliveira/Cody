/* Build from '/home/felipe/Documents/Cody/lang_tables/lang_glsl' */
/* Contextual content */
/////////////////////////////////
#include <languages.h>

TokenizerSupport glslSupport = {
    .comments = true,
    .strings = true,
    .numbers = true,
    .lookups = true,
    .multilineComment = true,
    .lineCommentChar = 0,
    .procs = {},
};


/////////////////////////////////
/* Auto generated file ( Aug 31 2022 16:29:34 ) */

std::vector<std::vector<GToken>> glslReservedPreprocessor = {
	{
		{ .value = "#", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "+", .identifier = TOKEN_ID_MATH },
		{ .value = "-", .identifier = TOKEN_ID_MATH },
		{ .value = ">", .identifier = TOKEN_ID_MORE },
		{ .value = "<", .identifier = TOKEN_ID_LESS },
		{ .value = "/", .identifier = TOKEN_ID_MATH },
		{ .value = "%", .identifier = TOKEN_ID_MATH },
		{ .value = "!", .identifier = TOKEN_ID_MATH },
		{ .value = "=", .identifier = TOKEN_ID_MATH },
		{ .value = "*", .identifier = TOKEN_ID_ASTERISK },
		{ .value = "&", .identifier = TOKEN_ID_MATH },
		{ .value = "|", .identifier = TOKEN_ID_MATH },
		{ .value = "^", .identifier = TOKEN_ID_MATH },
		{ .value = "~", .identifier = TOKEN_ID_MATH },
		{ .value = ",", .identifier = TOKEN_ID_COMMA },
		{ .value = ";", .identifier = TOKEN_ID_SEMICOLON },
		{ .value = ".", .identifier = TOKEN_ID_MATH },
		{ .value = "(", .identifier = TOKEN_ID_PARENTHESE_OPEN },
		{ .value = ")", .identifier = TOKEN_ID_PARENTHESE_CLOSE },
		{ .value = "{", .identifier = TOKEN_ID_BRACE_OPEN },
		{ .value = "}", .identifier = TOKEN_ID_BRACE_CLOSE },
		{ .value = "[", .identifier = TOKEN_ID_BRACKET_OPEN },
		{ .value = "]", .identifier = TOKEN_ID_BRACKET_CLOSE },
		{ .value = ":", .identifier = TOKEN_ID_MATH }, },
	{
		{ .value = "do", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "if", .identifier = TOKEN_ID_PREPROCESSOR_IF },
		{ .value = "in", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "out", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "asm", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "for", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "try", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "int", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "and", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "elif", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "flat", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "lowp", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "char", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "long", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "NULL", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "true", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "case", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "else", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "line", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "goto", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "bool", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "void", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "enum", .identifier = TOKEN_ID_DATATYPE_ENUM_DEF },
		{ .value = "vec2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "vec3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "vec4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat4", .identifier = TOKEN_ID_DATATYPE }, },
	{
		{ .value = "highp", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "ivec2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "ivec3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "ivec4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "bvec2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "bvec3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "bvec4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "inout", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "short", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "const", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "undef", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "ifdef", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "error", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "endif", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "final", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "false", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "float", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "while", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "debug", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "break", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "mat2x2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat2x3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat2x4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat3x2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat3x3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat3x4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat4x2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat4x3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat4x4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "define", .identifier = TOKEN_ID_PREPROCESSOR_DEFINE },
		{ .value = "ifndef", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "inline", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "static", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "sizeof", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "and_eq", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "signed", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "switch", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "return", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "double", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "struct", .identifier = TOKEN_ID_DATATYPE_STRUCT_DEF }, },
	{
		{ .value = "optmize", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "mediump", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "varying", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "uniform", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "discard", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "include", .identifier = TOKEN_ID_INCLUDE_SEL },
		{ .value = "defined", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "version", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "typedef", .identifier = TOKEN_ID_DATATYPE_TYPEDEF_DEF }, },
	{
		{ .value = "gl_Point", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_Color", .identifier = TOKEN_ID_RESERVED },
		{ .value = "centroid", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "__FILE__", .identifier = TOKEN_ID_RESERVED },
		{ .value = "__LINE__", .identifier = TOKEN_ID_RESERVED },
		{ .value = "register", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "unsigned", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "continue", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "gl_Vertex", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_Normal", .identifier = TOKEN_ID_RESERVED },
		{ .value = "sampler1D", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "sampler2D", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "sampler3D", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "attribute", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "extension", .identifier = TOKEN_ID_PREPROCESSOR },
		{ .value = "invariant", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "gl_TexCoord", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FogCoord", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FragData", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_Position", .identifier = TOKEN_ID_RESERVED },
		{ .value = "samplerCube", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "__VERSION__", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_BackColor", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxLights", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FragDepth", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FragColor", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FragCoord", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_PointSize", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_FrontColor", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_ClipVertex", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_FrontFacing", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "sampler1DShadow", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "sampler2DShadow", .identifier = TOKEN_ID_DATATYPE }, },
	{
		{ .value = "gl_MaxClipPlanes", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxDrawBuffers", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord0", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord1", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord2", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord3", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord4", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord5", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord6", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord7", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_SecondaryColor", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_ModelViewMatrix", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxTextureUnits", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxVaryingFloats", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxVertexAttribs", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxTextureCoords", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxTextureImageUnits", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxVertexTextureImageUnits", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxVertexUniformComponents", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxFragmentUniformComponents", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxCombinedTextureImageUnits", .identifier = TOKEN_ID_RESERVED }, },
};

std::vector<std::vector<GToken>> glslReservedTable = {
	{
		{ .value = "+", .identifier = TOKEN_ID_MATH },
		{ .value = "-", .identifier = TOKEN_ID_MATH },
		{ .value = ">", .identifier = TOKEN_ID_MORE },
		{ .value = "<", .identifier = TOKEN_ID_LESS },
		{ .value = "/", .identifier = TOKEN_ID_MATH },
		{ .value = "%", .identifier = TOKEN_ID_MATH },
		{ .value = "!", .identifier = TOKEN_ID_MATH },
		{ .value = "=", .identifier = TOKEN_ID_MATH },
		{ .value = "*", .identifier = TOKEN_ID_ASTERISK },
		{ .value = "&", .identifier = TOKEN_ID_MATH },
		{ .value = "|", .identifier = TOKEN_ID_MATH },
		{ .value = "^", .identifier = TOKEN_ID_MATH },
		{ .value = "~", .identifier = TOKEN_ID_MATH },
		{ .value = ",", .identifier = TOKEN_ID_COMMA },
		{ .value = ";", .identifier = TOKEN_ID_SEMICOLON },
		{ .value = ".", .identifier = TOKEN_ID_MATH },
		{ .value = "(", .identifier = TOKEN_ID_PARENTHESE_OPEN },
		{ .value = ")", .identifier = TOKEN_ID_PARENTHESE_CLOSE },
		{ .value = "{", .identifier = TOKEN_ID_BRACE_OPEN },
		{ .value = "}", .identifier = TOKEN_ID_BRACE_CLOSE },
		{ .value = "[", .identifier = TOKEN_ID_BRACKET_OPEN },
		{ .value = "]", .identifier = TOKEN_ID_BRACKET_CLOSE },
		{ .value = ":", .identifier = TOKEN_ID_MATH }, },
	{
		{ .value = "do", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "if", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "in", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "for", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "int", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "and", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "out", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "flat", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "lowp", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "char", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "long", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "NULL", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "case", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "true", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "else", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "goto", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "bool", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "void", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "enum", .identifier = TOKEN_ID_DATATYPE_ENUM_DEF },
		{ .value = "vec2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "vec3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "vec4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat4", .identifier = TOKEN_ID_DATATYPE }, },
	{
		{ .value = "highp", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "ivec2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "ivec3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "ivec4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "bvec2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "bvec3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "bvec4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "false", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "inout", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "short", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "const", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "union", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "float", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "while", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "break", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "mat2x2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat2x3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat2x4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat3x2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat3x3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat3x4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat4x2", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat4x3", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "mat4x4", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "inline", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "static", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "sizeof", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "and_eq", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "signed", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "switch", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "return", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "extern", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "double", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "struct", .identifier = TOKEN_ID_DATATYPE_STRUCT_DEF }, },
	{
		{ .value = "mediump", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "varying", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "uniform", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "discard", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "typedef", .identifier = TOKEN_ID_DATATYPE_TYPEDEF_DEF }, },
	{
		{ .value = "gl_Point", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_Color", .identifier = TOKEN_ID_RESERVED },
		{ .value = "centroid", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "__FILE__", .identifier = TOKEN_ID_RESERVED },
		{ .value = "__LINE__", .identifier = TOKEN_ID_RESERVED },
		{ .value = "register", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "volatile", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "unsigned", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "continue", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "gl_Vertex", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_Normal", .identifier = TOKEN_ID_RESERVED },
		{ .value = "sampler1D", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "sampler2D", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "sampler3D", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "attribute", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "invariant", .identifier = TOKEN_ID_OPERATOR }, },
	{
		{ .value = "const_cast", .identifier = TOKEN_ID_OPERATOR },
		{ .value = "__device__", .identifier = TOKEN_ID_RESERVED },
		{ .value = "__global__", .identifier = TOKEN_ID_RESERVED },
		{ .value = "__inline__", .identifier = TOKEN_ID_RESERVED },
		{ .value = "__shared__", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_TexCoord", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FogCoord", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FragData", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_Position", .identifier = TOKEN_ID_RESERVED },
		{ .value = "samplerCube", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "__VERSION__", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_BackColor", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxLights", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FragDepth", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FragColor", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_FragCoord", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_PointSize", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_FrontColor", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_ClipVertex", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_FrontFacing", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "sampler1DShadow", .identifier = TOKEN_ID_DATATYPE },
		{ .value = "sampler2DShadow", .identifier = TOKEN_ID_DATATYPE }, },
	{
		{ .value = "gl_MaxClipPlanes", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxDrawBuffers", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord0", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord1", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord2", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord3", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord4", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord5", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord6", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MultiTexCoord7", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_SecondaryColor", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_ModelViewMatrix", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxTextureUnits", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxVaryingFloats", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxVertexAttribs", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxTextureCoords", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxTextureImageUnits", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxVertexTextureImageUnits", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxVertexUniformComponents", .identifier = TOKEN_ID_RESERVED }, },
	{
		{ .value = "gl_MaxFragmentUniformComponents", .identifier = TOKEN_ID_RESERVED },
		{ .value = "gl_MaxCombinedTextureImageUnits", .identifier = TOKEN_ID_RESERVED }, },
};

